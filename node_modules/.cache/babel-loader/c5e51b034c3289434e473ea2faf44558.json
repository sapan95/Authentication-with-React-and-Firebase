{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Projects\\\\fb-google auth\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { retrieveStoredToken } from \"./store/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authAction } from \"./store/auth\";\nimport Layout from './components/Layout/Layout';\nimport ProductPage from './pages/Product';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const tokenData = retrieveStoredToken();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(() => {\n        dispatch(authAction.logout());\n      }, tokenData.duration);\n    }\n  }, [tokenData]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth\",\n        children: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/product\",\n        children: [isLoggedIn && /*#__PURE__*/_jsxDEV(ProductPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 26\n        }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/auth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1UeP8vQEPN1o+Z4PF2Q18e5AyvA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React/Projects/fb-google auth/src/App.js"],"names":["useEffect","Switch","Route","Redirect","retrieveStoredToken","useDispatch","useSelector","authAction","Layout","ProductPage","AuthPage","HomePage","App","dispatch","tokenData","isLoggedIn","state","auth","console","log","duration","logoutTimer","setTimeout","logout"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,SAAS,GAAGV,mBAAmB,EAArC;AACA,QAAMW,UAAU,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,UAArB,CAA9B;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,SAAJ,EAAe;AACbI,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACM,QAAtB;AACAC,MAAAA,WAAW,GAAGC,UAAU,CAAC,MAAM;AAC7BT,QAAAA,QAAQ,CAACN,UAAU,CAACgB,MAAX,EAAD,CAAR;AACD,OAFuB,EAEtBT,SAAS,CAACM,QAFY,CAAxB;AAGD;AACF,GAPQ,EAON,CAACN,SAAD,CAPM,CAAT;AASA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,CAACC,UAAD,iBAAgB,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,+BACf,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADe;AAAA;AAAA;AAAA;AAAA,cAJnB,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA,mBACGA,UAAU,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADjB,EAEG,CAACA,UAAD,iBAAe,QAAC,QAAD;AAAU,UAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAjCQH,G;UACUP,W,EAEEC,W;;;KAHZM,G;AAmCT,eAAeA,GAAf","sourcesContent":["import { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { retrieveStoredToken } from \"./store/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authAction } from \"./store/auth\";\nimport Layout from './components/Layout/Layout';\nimport ProductPage from './pages/Product';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  const dispatch = useDispatch();   \n  const tokenData = retrieveStoredToken();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  \n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(() => {\n        dispatch(authAction.logout());\n      },tokenData.duration);\n    }\n  }, [tokenData]);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        {!isLoggedIn && (<Route path='/auth'>\n          <AuthPage />\n        </Route>)}\n        <Route path='/product'>\n          {isLoggedIn && <ProductPage />}\n          {!isLoggedIn && <Redirect to = '/auth' />}\n        </Route>\n        <Route path='*'>\n          <Redirect to = '/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}