{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Projects\\\\fb-google auth\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { retrieveStoredToken } from \"./store/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authAction } from \"./store/auth\";\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let logoutTimer;\n  const logout = useDispatch(authAction.logout());\n  const tokenData = retrieveStoredToken();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  useEffect(() => {\n    debugger;\n\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logout, tokenData.duration);\n    }\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(logoutTimer);\n    };\n  }, [tokenData]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth\",\n        children: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        children: [isLoggedIn && /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 26\n        }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/auth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GduJ17Qk9l+A/ZkSzhXRHUuBrdw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React/Projects/fb-google auth/src/App.js"],"names":["useEffect","Switch","Route","Redirect","retrieveStoredToken","useDispatch","useSelector","authAction","Layout","UserProfile","AuthPage","HomePage","App","logoutTimer","logout","tokenData","isLoggedIn","state","auth","console","log","duration","setTimeout","clearTimeout"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,WAAJ;AACA,QAAMC,MAAM,GAAGT,WAAW,CAACE,UAAU,CAACO,MAAX,EAAD,CAA1B;AACA,QAAMC,SAAS,GAAGX,mBAAmB,EAArC;AACA,QAAMY,UAAU,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,UAArB,CAA9B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd;;AACA,QAAIe,SAAJ,EAAe;AACbI,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACM,QAAtB;AACAR,MAAAA,WAAW,GAAGS,UAAU,CAACR,MAAD,EAAQC,SAAS,CAACM,QAAlB,CAAxB;AACD;;AACD,WAAO,MAAM;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAG,MAAAA,YAAY,CAACV,WAAD,CAAZ;AACD,KAHD;AAID,GAVQ,EAUN,CAACE,SAAD,CAVM,CAAT;AAYA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,CAACC,UAAD,iBAAgB,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,+BACf,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADe;AAAA;AAAA;AAAA;AAAA,cAJnB,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA,mBACGA,UAAU,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADjB,EAEG,CAACA,UAAD,iBAAe,QAAC,QAAD;AAAU,UAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GArCQJ,G;UAEQP,W,EAEIC,W;;;KAJZM,G;AAuCT,eAAeA,GAAf","sourcesContent":["import { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { retrieveStoredToken } from \"./store/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authAction } from \"./store/auth\";\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  let logoutTimer;\n  const logout = useDispatch(authAction.logout());\n  const tokenData = retrieveStoredToken();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  \n  useEffect(() => {\n    debugger;\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logout,tokenData.duration);\n    }\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(logoutTimer);\n    };\n  }, [tokenData]);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        {!isLoggedIn && (<Route path='/auth'>\n          <AuthPage />\n        </Route>)}\n        <Route path='/profile'>\n          {isLoggedIn && <UserProfile />}\n          {!isLoggedIn && <Redirect to = '/auth' />}\n        </Route>\n        <Route path='*'>\n          <Redirect to = '/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}